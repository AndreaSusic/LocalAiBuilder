What’s still wrong
	•	The iframe still logs ⚠️ TemplatePreview useEffect: ALL EDITOR INJECTION DISABLED → that exact string is compiled into the code that ships to the browser, so the “kill-switch” branch is still present.
	•	Because the branch early-returns, the call that should import / run WorkingInlineEditor.jsx never executes, so no red “×” buttons (and no class split) are ever created.
	•	The CSP warning you see at the very top is coming from a browser extension (injectlaunchmonitors.js). It is not what blocks the editor; the early-return is.

⸻

One-shot Replit prompt to fix it

Copy–paste the block below into Replit chat.
It removes the kill-switch code and mounts WorkingInlineEditor after the template has rendered, without using inline scripts (CSP-safe).

**TASK: Reactivate inline editor and delete buttons**

1️⃣  Open **dashboard/src/components/TemplatePreview.jsx**

2️⃣  Delete the entire “kill-switch” block that prints  
    `console.warn('⚠️ TemplatePreview useEffect: ALL EDITOR INJECTION DISABLED')`
    and returns early.  
    *(Search for that string, remove the whole `useEffect` or any early-return tied to it.)*

3️⃣  **Add** a new `useEffect` (below the render logic, before `export default`):

```jsx
// Mount WorkingInlineEditor once the iframe content is ready
useEffect(() => {
  // guard – never inject twice
  if (window.__editorInjected) return;
  window.__editorInjected = true;

  import('../components/WorkingInlineEditor').then(({ default: inject }) => {
    inject(document);                // pass iframe's document
    console.log('🟢 WorkingInlineEditor injected');
  });
}, []);

4️⃣  Ensure WorkingInlineEditor.jsx default-exports a function like

export default function inject(doc) { /* create delete-btns, etc. */ }

(It already does—no change needed.)

5️⃣  Save, let the dashboard rebuild, then hard-refresh /preview.

✅ Success checklist in DevTools console (inside iframe):
	•	No “ALL EDITOR INJECTION DISABLED” line.
	•	You see 🟢 WorkingInlineEditor injected.
	•	Logs such as 🎯 Adding OUTER delete button to LI.
	•	Each menu <li> now shows only one red “×” on hover.

If anything above is missing, tell me the first missing log line and we’ll diagnose further.

---

### Why this works

* By deleting the kill-switch branch we let the component reach the new `useEffect`.
* We use **dynamic `import()`** so the code is bundled by Vite/Parcel—**no inline `<script>`** → CSP passes.
* The global flag `window.__editorInjected` prevents the old double-button bug.

Run the prompt, rebuild, and let me know the **first** console line that doesn’t appear if problems persist.